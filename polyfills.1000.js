/*! For detailed credits and licence information see https://github.com/financial-times/polyfill-library */
(function(e){function t(e,t){var r=arguments.length>2?arguments[2]:[];if(!1===n(e))throw new TypeError(Object.prototype.toString.call(e)+"is not a function.");return e.apply(t,r)}function r(e,t){return e[t]}function n(e){return"function"==typeof e}function o(e){var t=function(e){var t=Number(e);return isNaN(t)?0:1/t==1/0||1/t==-1/0||t===1/0||t===-1/0?t:(t<0?-1:1)*Math.floor(Math.abs(t))}(e);return t<=0?0:Math.min(t,Math.pow(2,53)-1)}function i(t){if(null===t||t===e)throw TypeError();return Object(t)}function a(t,r){var o,a=(o=r,i(t)[o]);if(null===a||a===e)return e;if(!1===n(a))throw new TypeError("Method not callable: "+r);return a}function f(e){switch(typeof e){case"undefined":return"undefined";case"boolean":return"boolean";case"number":return"number";case"string":return"string";case"symbol":return"symbol";default:return null===e?"null":"Symbol"in this&&e instanceof this.Symbol?"symbol":"object"}}function c(o){var i=arguments.length>1?arguments[1]:e;if("object"===f(o)){if(arguments.length<2)var c="default";else i===String?c="string":i===Number&&(c="number");var u="function"==typeof this.Symbol&&"symbol"==typeof this.Symbol.toPrimitive?a(o,this.Symbol.toPrimitive):e;if(u!==e){var l=t(u,o,[c]);if("object"!==f(l))return l;throw new TypeError("Cannot convert exotic object to primitive.")}return"default"===c&&(c="number"),function(e,o){if("string"===o)var i=["toString","valueOf"];else i=["valueOf","toString"];for(var a=0;a<i.length;++a){var c=r(e,i[a]);if(n(c)){var u=t(c,e);if("object"!==f(u))return u}}throw new TypeError("Cannot convert to primitive.")}(o,c)}return o}function u(e){switch(f(e)){case"symbol":throw new TypeError("Cannot convert a Symbol value to a string");case"object":return u(c(e,"string"));default:return String(e)}}var l,s,b,y,p,w;"defineProperty"in Object&&function(){try{return Object.defineProperty({},"test",{value:42}),!0}catch(e){return!1}}()||(l=Object.defineProperty,s=Object.prototype.hasOwnProperty("__defineGetter__"),b="A property cannot both have accessors and be writable or have a value",Object.defineProperty=function(e,t,r){if(l&&(e===window||e===document||e===Element.prototype||e instanceof Element))return l(e,t,r);if(null===e||!(e instanceof Object||"object"==typeof e))throw new TypeError("Object.defineProperty called on non-object");if(!(r instanceof Object))throw new TypeError("Property description must be an object");var n=String(t),o="value"in r||"writable"in r,i="get"in r&&typeof r.get,a="set"in r&&typeof r.set;if(i){if("function"!==i)throw new TypeError("Getter must be a function");if(!s)throw new TypeError("Getters & setters cannot be defined on this javascript engine");if(o)throw new TypeError(b);Object.__defineGetter__.call(e,n,r.get)}else e[n]=r.value;if(a){if("function"!==a)throw new TypeError("Setter must be a function");if(!s)throw new TypeError("Getters & setters cannot be defined on this javascript engine");if(o)throw new TypeError(b);Object.__defineSetter__.call(e,n,r.set)}return"value"in r&&(e[n]=r.value),e}),"findIndex"in Array.prototype||(y=Array.prototype,p="findIndex",w={value:function(a){var f=i(this),c=o(r(f,"length"));if(!1===n(a))throw new TypeError(a+" is not a function");for(var l,s=arguments.length>1?arguments[1]:e,b=0;b<c;){var y=r(f,u(b));if(l=t(a,s,[y,b,f]),Boolean(l))return b;b+=1}return-1},writable:!0,enumerable:!1,configurable:!0},Object.defineProperty(y,p,w))}).call("object"==typeof window&&window||"object"==typeof self&&self||"object"==typeof global&&global||{});